#!/bin/bash

# Auto Power Profile - Instalador v2.0.0
# Instala√ß√£o simples e funcional

# Cores
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

# Configura√ß√µes
REPO_URL="https://github.com/andrecesarvieira/auto-power-profile"
EXTENSION_UUID="auto-power-profile@andrecesarvieira.github.io"
ZIP_FILENAME="${EXTENSION_UUID}.shell-extension.zip"
TEMP_DIR="/tmp/auto-power-profile-install"

# Fun√ß√µes de output
print_header() {
    echo -e "${BLUE}[INSTALL]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# Banner
show_banner() {
    echo -e "${BLUE}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë              Auto Power Profile - Instalador                ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë  Extens√£o GNOME Shell para altern√¢ncia autom√°tica de        ‚ïë"
    echo "‚ïë  perfis de energia com controle de anima√ß√µes na bateria     ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë  ‚ö° INSTALA√á√ÉO SIMPLIFICADA ‚ö°                              ‚ïë"
    echo "‚ïë  Mantido por: andrecesarvieira | Vers√£o: 2.0.0              ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
}

# Verificar depend√™ncias
check_dependencies() {
    print_header "Verificando depend√™ncias..."
    
    # Verificar GNOME Shell
    if ! command -v gnome-shell &> /dev/null; then
        print_error "GNOME Shell n√£o encontrado. Esta extens√£o requer GNOME Shell."
        exit 1
    fi
    
    # Verificar gnome-extensions
    if ! command -v gnome-extensions &> /dev/null; then
        print_error "Comando gnome-extensions n√£o encontrado."
        print_error "Instale: sudo apt install gnome-shell-extension-manager"
        exit 1
    fi
    
    # Verificar git
    if ! command -v git &> /dev/null; then
        print_error "git n√£o encontrado. Instale: sudo apt install git"
        exit 1
    fi
    
    # Verificar msgfmt
    if ! command -v msgfmt &> /dev/null; then
        print_error "msgfmt n√£o encontrado. Instale: sudo apt install gettext"
        exit 1
    fi
    
    # Verificar glib-compile-schemas
    if ! command -v glib-compile-schemas &> /dev/null; then
        print_error "glib-compile-schemas n√£o encontrado. Instale: sudo apt install libglib2.0-dev"
        exit 1
    fi
    
    print_status "Depend√™ncias verificadas ‚úì"
}

# Download e compila√ß√£o
download_and_compile() {
    print_header "Baixando e compilando extens√£o..."
    
    # Limpar e criar diret√≥rio tempor√°rio
    rm -rf "$TEMP_DIR"
    mkdir -p "$TEMP_DIR"
    cd "$TEMP_DIR"
    
    # Clonar reposit√≥rio
    print_status "Clonando reposit√≥rio..."
    if ! git clone --depth 1 "$REPO_URL.git" auto-power-profile; then
        print_error "Falha ao clonar reposit√≥rio"
        exit 1
    fi
    
    cd auto-power-profile
    print_status "Reposit√≥rio clonado ‚úì"
    
    # Compilar tradu√ß√µes
    print_status "Compilando tradu√ß√µes..."
    if [ -d "po" ]; then
        mkdir -p locale
        compiled_count=0
        for po_file in po/*.po; do
            if [ -f "$po_file" ]; then
                lang_code=$(basename "$po_file" .po)
                mkdir -p "locale/${lang_code}/LC_MESSAGES"
                
                if msgfmt "$po_file" -o "locale/${lang_code}/LC_MESSAGES/auto-power-profile.mo"; then
                    compiled_count=$((compiled_count + 1))
                    print_status "  $lang_code compilado ‚úì"
                fi
            fi
        done
        print_status "Tradu√ß√µes compiladas: $compiled_count idiomas ‚úì"
    fi
    
    # Compilar schemas
    print_status "Compilando schemas..."
    if [ -d "schemas" ]; then
        cd schemas
        if glib-compile-schemas .; then
            print_status "Schemas compilados ‚úì"
        else
            print_error "Falha ao compilar schemas"
            exit 1
        fi
        cd ..
    fi
    
    # Empacotar extens√£o
    print_status "Empacotando extens√£o..."
    if gnome-extensions pack --podir=po --extra-source=ui --extra-source=lib --extra-source=locale --force; then
        print_status "Extens√£o empacotada ‚úì"
    elif gnome-extensions pack --podir=po --extra-source=ui --extra-source=lib --force; then
        print_status "Extens√£o empacotada (sem locale) ‚úì"
    else
        print_error "Falha ao empacotar extens√£o"
        exit 1
    fi
    
    # Verificar arquivo
    if [ ! -f "$ZIP_FILENAME" ]; then
        print_error "Arquivo ZIP n√£o foi criado: $ZIP_FILENAME"
        exit 1
    fi
    
    print_status "Compila√ß√£o conclu√≠da ‚úì"
}

# Instalar extens√£o
install_extension() {
    print_header "Instalando extens√£o..."
    
    # Desinstalar vers√£o anterior
    if gnome-extensions list | grep -q "$EXTENSION_UUID"; then
        print_status "Removendo vers√£o anterior..."
        gnome-extensions uninstall "$EXTENSION_UUID" || true
    fi
    
    # Instalar nova vers√£o
    if gnome-extensions install --force "$ZIP_FILENAME"; then
        print_status "Extens√£o instalada ‚úì"
    else
        print_error "Falha ao instalar extens√£o"
        exit 1
    fi
    
    # Habilitar extens√£o
    print_status "Habilitando extens√£o..."
    if gnome-extensions enable "$EXTENSION_UUID"; then
        print_success "Extens√£o habilitada ‚úì"
    else
        print_warning "Extens√£o instalada mas n√£o habilitada automaticamente"
        print_status "Habilite manualmente em: Configura√ß√µes > Extens√µes"
    fi
}

# Verificar instala√ß√£o
verify_installation() {
    print_header "Verificando instala√ß√£o..."
    
    # Verificar se arquivo foi instalado no diret√≥rio correto
    local extension_dir="$HOME/.local/share/gnome-shell/extensions/$EXTENSION_UUID"
    
    if [ -d "$extension_dir" ] && [ -f "$extension_dir/metadata.json" ]; then
        print_success "Extens√£o instalada no diret√≥rio ‚úì"
        print_status "Local: $extension_dir"
        
        # Verificar conte√∫do b√°sico
        if [ -f "$extension_dir/extension.js" ]; then
            print_success "Arquivos principais encontrados ‚úì"
        fi
        
        print_warning "‚ö†Ô∏è  A extens√£o aparecer√° na lista ap√≥s reiniciar GNOME Shell"
        print_status "Para ativar imediatamente:"
        print_status "  ‚Ä¢ Alt+F2 ‚Üí digite 'r' ‚Üí Enter (apenas X11)"
        print_status "  ‚Ä¢ Ou fa√ßa logout/login"
        
    else
        print_error "Diret√≥rio da extens√£o n√£o encontrado: $extension_dir"
        print_error "A instala√ß√£o pode ter falhado"
        exit 1
    fi
}

# Limpeza
cleanup() {
    print_header "Limpando arquivos tempor√°rios..."
    rm -rf "$TEMP_DIR"
    print_status "Limpeza conclu√≠da ‚úì"
}

# Instru√ß√µes finais
show_final_message() {
    echo
    print_success "üéâ Auto Power Profile v2.0.0 instalado com sucesso!"
    echo
    print_status "ÔøΩ IMPORTANTE: Reinicie GNOME Shell para ativar a extens√£o:"
    
    # Detectar se √© Wayland ou X11
    if [ -n "${WAYLAND_DISPLAY:-}" ]; then
        print_status "  ‚Ä¢ Fa√ßa logout e login novamente (Wayland)"
    else
        print_status "  ‚Ä¢ Alt+F2 ‚Üí digite 'r' ‚Üí Enter (X11)"
        print_status "  ‚Ä¢ Ou fa√ßa logout e login novamente"
    fi
    
    echo
    print_status "üìã Ap√≥s reiniciar:"
    print_status "  1. Abra Configura√ß√µes do GNOME"
    print_status "  2. V√° em Extens√µes"
    print_status "  3. Habilite e configure Auto Power Profile"
    echo
    print_status "üîß Ou configure via terminal (ap√≥s reiniciar):"
    print_status "  gnome-extensions enable $EXTENSION_UUID"
    print_status "  gnome-extensions prefs $EXTENSION_UUID"
    echo
    print_success "‚úÖ Instala√ß√£o conclu√≠da! Reinicie o shell para usar."
}

# Fun√ß√£o principal
main() {
    show_banner
    
    # Verificar ambiente
    if [ "${XDG_CURRENT_DESKTOP:-}" != "GNOME" ]; then
        print_warning "Desktop atual: ${XDG_CURRENT_DESKTOP:-'n√£o detectado'}"
        print_warning "Esta extens√£o √© projetada para GNOME Shell"
    fi
    
    if [ -z "${DISPLAY:-}" ] && [ -z "${WAYLAND_DISPLAY:-}" ]; then
        print_error "Nenhum display gr√°fico detectado"
        print_error "Execute em uma sess√£o gr√°fica GNOME"
        exit 1
    fi
    
    print_status "Ambiente verificado ‚úì"
    echo
    
    check_dependencies
    echo
    
    download_and_compile
    echo
    
    install_extension
    echo
    
    verify_installation
    echo
    
    cleanup
    
    show_final_message
}

# Executar
case "${1:-}" in
    --help|-h)
        echo "Auto Power Profile - Instalador v2.0.0"
        echo
        echo "USO:"
        echo "  curl -fsSL https://raw.githubusercontent.com/andrecesarvieira/auto-power-profile/main/install.sh | bash"
        echo
        echo "OP√á√ïES:"
        echo "  -h, --help      Mostra esta ajuda"
        echo "  -v, --version   Mostra a vers√£o"
        echo
        exit 0
        ;;
    --version|-v)
        echo "Auto Power Profile Installer v2.0.0"
        exit 0
        ;;
    *)
        main "$@"
        ;;
esac